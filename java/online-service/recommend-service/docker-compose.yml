version: '3.5'

services:
  server:
    container_name: recommend-service
    restart: on-failure
    # 也可以直接使用mvn package docker:build 之后生成的image
    build:
      context: .
      dockerfile: Dockerfile  # need mvn package first
    image: dmetasoul/recommend-service-11:1.0
    command: java -jar recommend-service-1.0-SNAPSHOT.jar
    environment:
      CONSUL_HOST: consul
    ports:
      - "8080:8080"
    depends_on:
      - "consul"

  consul:
    container_name: consul-service
    restart: on-failure
    image: consul:1.13.1
    environment:
      CONSUL_LOCAL_CONFIG: "{\"skip_leave_on_interrupt\": true}"
    command: consul agent -server -bootstrap-expect 1 -data-dir=/consul/data -bind=127.0.0.1 -client=0.0.0.0 -ui
    ports:
      - "8500:8500"
      - "8600:8600"
      - "8300:8300"

  serving:
    container_name: model-serving
    restart: on-failure
    image: swr.cn-southwest-2.myhuaweicloud.com/dmetasoul-repo/metaspore-serving-release:cpu-v1.0.1
    command: /opt/metaspore-serving/bin/metaspore-serving-bin -grpc_listen_port 50000 -init_load_path /data/models
    ports:
      - "50000:50000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/serving_models:/data/models

  mongo:
    container_name: mongodb-service
    restart: always
    image: mongo:6.0.1
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"

  redis:
    container_name: redis-service
    restart: always
    image: redis:7.0.4
    ports:
      - "6379:6379"

  mysql:
    container_name: mysql-service
    restart: always
    image: mysql:8.0.30
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2020-12-03T00-03-10Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus-service
    image: milvusdb/milvus:v2.0.1
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
    depends_on:
      - "etcd"
      - "minio"

networks:
  default:
    name: recommend
